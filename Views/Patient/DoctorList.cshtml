@model IEnumerable<HospitalManagementSystem.Models.Doctor>
@inject IHttpContextAccessor HttpContextAccessor

@{
    // Get the user's role directly in the view to control rendering
    var role = HttpContextAccessor.HttpContext?.Session.GetString("Role");

    // Set ViewData["Title"] dynamically based on role
    ViewData["Title"] = (role == "Admin") ? "Manage Doctors" : "Our Doctors";

    // Layout is dynamically set via _ViewStart.cshtml, so remove explicit declaration here.
    // Layout = "~/Views/Shared/_Layout.cshtml"; // REMOVE THIS LINE if present
}

<div class="card border mt-5 mb-4">
    <div class="card-header bg-primary text-white p-3"> @* Changed from bg-secondary to bg-primary *@
        <h1 class="fw-normal mb-0 text-center">@ViewData["Title"]</h1>
    </div>
    <div class="card-body p-3">

        @* NEW: Display New Doctor Login Info if available in TempData *@
        @if (TempData["NewDoctorLoginInfo"] != null)
        {
            <div class="alert alert-success alert-dismissible fade show" role="alert">
                <strong>Success!</strong> @TempData["NewDoctorLoginInfo"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }

        @* ADMIN ONLY: Add New Doctor Button *@
        @if (role == "Admin")
        {
            <div class="mb-3 d-flex justify-content-end">
                
                <a asp-controller="Doctor" asp-action="Create" class="btn btn-info">
                    <i class="bi bi-person-plus-fill me-2"></i> Add New Doctor
                </a>
            </div>
        }


        <form asp-controller="Patient" asp-action="DoctorList" method="get" class="mb-4 p-2 border-bottom">
            <div class="row g-2 align-items-center">
                <div class="col-md-4">
                    <input type="text" name="searchString" class="form-control" placeholder="Search by name or contact" value="@ViewBag.CurrentSearchString" />
                </div>
                <div class="col-md-4">
                    <select name="specialization" class="form-select">
                        {{--  Explicitly render the "All Specializations" option. It's selected if CurrentSpecialization is null or empty.  --}}
                        <option value="" @@(string.IsNullOrEmpty(ViewBag.CurrentSpecialization) ? "selected" : "")>-- All Specializations --</option>
                        {{--  Loop through actual specializations. These will never have an empty value due to controller filtering.  --}}
                        @if (ViewBag.Specializations != null)
                        {
                            foreach (var spec in ViewBag.Specializations)
                            {
                                <option value="@spec" @@(spec == ViewBag.CurrentSpecialization ? "selected" : "")>@spec</option>
                            }
                        }
                    </select>
                </div>
                <div class="col-md-4 d-flex justify-content-end">
                    <button type="submit" class="btn btn-primary me-2">
                        <i class="bi bi-search me-2"></i> Search / Filter
                    </button>
                    <a asp-controller="Patient" asp-action="DoctorList" class="btn btn-outline-secondary">
                        <i class="bi bi-x-circle-fill me-2"></i> Clear
                    </a>
                </div>
            </div>
        </form>

        <div class="table-responsive border">
            <table class="table table-hover table-striped">
                <thead class="table-dark">
                    <tr>
                        <th scope="col" class="text-white">
                            @Html.DisplayNameFor(model => model.Name)
                        </th>
                        <th scope="col" class="text-white">
                            @Html.DisplayNameFor(model => model.Specialization)
                        </th>
                        <th scope="col" class="text-white">
                            @Html.DisplayNameFor(model => model.Description)
                        </th>
                        <th scope="col" class="text-white">
                            @Html.DisplayNameFor(model => model.Contact)
                        </th>
                        <th scope="col" class="text-white">
                            @Html.DisplayNameFor(model => model.Location)
                        </th>
                        @* ADMIN ONLY: Actions column header - only show if Admin *@
                        @if (role == "Admin")
                        {
                            <th scope="col" class="text-white">Actions</th>
                        }
                        @* PATIENT ONLY: Book Appointment column header - only show if Patient *@
                        @if (role == "Patient")
                        {
                            <th scope="col" class="text-white">Book</th>
                        }
                    </tr>
                </thead>
                <tbody>
                    @if (Model == null || !Model.Any())
                    {
                        <tr>

                            <td colspan="@(role == "Admin" ? "6" : "5")" class="text-center text-muted py-3">No doctors found.</td>
                        </tr>
                    }
                    else
                    {
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Name)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Specialization)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Description)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Contact)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Location)
                                </td>
                                @* ADMIN ONLY: Action buttons for each row - only show if Admin *@
                                @if (role == "Admin")
                                {
                                    <td class="text-center">
                                        <a asp-controller="Doctor" asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-warning me-1">Edit</a>
                                        <a asp-controller="Doctor" asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-info me-1">Details</a>
                                        <a asp-controller="Doctor" asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-danger">Delete</a>
                                    </td>
                                }
                                @* PATIENT ONLY: Book Appointment button for each row - only show if Patient *@
                                @if (role == "Patient")
                                {
                                    <td class="text-center">
                                        <a asp-controller="Appointment" asp-action="Create" asp-route-doctorId="@item.Id" class="btn btn-outline-primary btn-sm rounded-pill">
                                            <i class="fas fa-calendar-plus me-1"></i> Book
                                        </a>
                                    </td>
                                }
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>

        @if (!Model.Any() && string.IsNullOrEmpty(ViewBag.CurrentSearchString) && string.IsNullOrEmpty(ViewBag.CurrentSpecialization))
        {
            <p class="text-muted text-center mt-4">No doctors found. Please add new doctors to the system.</p>
        }
        else if (!Model.Any() && (!string.IsNullOrEmpty(ViewBag.CurrentSearchString) || !string.IsNullOrEmpty(ViewBag.CurrentSpecialization)))
        {
            <p class="text-muted text-center mt-4">No doctors found matching your search/filter criteria.</p>
        }
    </div>
</div>

@section Scripts {
    <!-- Font Awesome for icons -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/js/all.min.js" crossorigin="anonymous"></script>
    
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
}

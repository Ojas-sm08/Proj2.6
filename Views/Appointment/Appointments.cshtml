@model IEnumerable<HospitalManagementSystem.Models.Appointment>
@inject IHttpContextAccessor HttpContextAccessor 

@{
    ViewData["Title"] = "My Appointments";
    Layout = "~/Views/Shared/_Layout.Patient.cshtml";

    // Get the user's role from session
    var role = HttpContextAccessor.HttpContext?.Session.GetString("Role");
    var isPatient = (role == "Patient");
    var isDoctor = (role == "Doctor"); // Keep for other roles' visibility logic if applied elsewhere
    var isAdmin = (role == "Admin");   // Keep for other roles' visibility logic if applied elsewhere
}

<h2 class="mb-4 text-center">📅 My Appointments</h2>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        @TempData["ErrorMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
@if (TempData["InfoMessage"] != null)
{
    <div class="alert alert-info alert-dismissible fade show" role="alert">
        @TempData["InfoMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}


<div class="card shadow-sm p-4">
    <div class="card-body">
        @if (Model != null && Model.Any())
        {
            <div class="table-responsive">
                <table class="table table-hover table-striped">
                    <thead class="table-light">
                        <tr>
                            <th>Appointment Date & Time</th>
                            <th>Doctor</th>
                            <th>Reason</th>
                            <th>Location</th>
                            <th>Status</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr id="appointment-row-@item.Id">
                                <td>@item.AppointmentDateTime.ToString("yyyy-MM-dd hh:mm tt")</td>
                                <td>@item.Doctor?.Name (@item.Doctor?.Specialization)</td>
                                <td>@item.Reason</td>
                                <td>@item.Location</td>
                                <td>
                                    <span class="badge @(item.Status == "Scheduled" ? "bg-primary" : item.Status == "Completed" ? "bg-success" : item.Status == "Cancelled" ? "bg-danger" : "bg-secondary")">
                                        @item.Status
                                    </span>
                                </td>
                                <td>
                                    <a asp-controller="Appointment" asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-info" title="View Details"><i class="fas fa-eye"></i></a>


                                    @if (!isPatient) 
                                    {
                                        @if (item.Status == "Scheduled" && item.AppointmentDateTime > DateTime.Now)
                                        {
                                            <a asp-controller="Appointment" asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-warning ms-1" title="Edit Appointment"><i class="fas fa-edit"></i></a>
                                            <button type="button" class="btn btn-sm btn-danger ms-1 cancel-appointment-btn" data-id="@item.Id" title="Cancel Appointment"><i class="fas fa-times-circle"></i></button>
                                        }
                                        else if (isAdmin)
                                        {
                                            <button type="button" class="btn btn-sm btn-danger ms-1 delete-appointment-btn" data-id="@item.Id" title="Delete Appointment"><i class="fas fa-trash"></i></button>
                                        }
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="alert alert-info text-center" role="alert">
                You have no upcoming or past appointments.
            </div>
        }
    </div>
    <div class="card-footer text-center">
        <a asp-controller="Appointment" asp-action="Create" class="btn btn-success"><i class="fas fa-plus-circle me-1"></i> Book New Appointment</a>
    </div>
</div>

@section Scripts {
    {{-- Removed @{await Html.RenderPartialAsync("_ValidationScriptsPartial");} as it's not typically needed here --}}
    <!-- Font Awesome for icons -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/js/all.min.js" crossorigin="anonymous"></script>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>

    <script>
        $(document).ready(function () {
            // Event listener for "Cancel Appointment" button.
            // This button will only be visible to non-patients as per Razor logic.
            $('.cancel-appointment-btn').on('click', function () {
                const appointmentId = $(this).data('id');
                // Use a custom modal for confirmation instead of browser's alert/confirm if possible
                if (confirm('Are you sure you want to cancel this appointment? This action cannot be undone.')) {
                    $.ajax({
                        url: '@Url.Action("Cancel", "Appointment")',
                        type: 'POST',
                        data: { id: appointmentId },
                        headers: {
                            'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                        },
                        success: function (response) {
                            if (response.success) {
                                // Fade out the row and then reload to show updated list and message
                                $('#appointment-row-' + appointmentId).fadeOut(500, function() {
                                    location.reload();
                                });
                            } else {
                                // Display error message from the server
                                alert(response.message);
                            }
                        },
                        error: function (xhr, status, error) {
                            console.error("AJAX Error:", status, error, xhr.responseText);
                            alert('An error occurred while canceling the appointment. Please try again.');
                        }
                    });
                }
            });

            // Event listener for "Delete Appointment" button.
            // This button will only be visible to Admins as per Razor logic.
            $('.delete-appointment-btn').on('click', function () {
                const appointmentId = $(this).data('id');
                if (confirm('Are you sure you want to PERMANENTLY delete this appointment? This cannot be undone.')) {
                    $.ajax({
                        url: '@Url.Action("Delete", "Appointment")', // Make sure your Delete action is set up to handle POST and return JSON
                        type: 'POST',
                        data: { id: appointmentId },
                        headers: {
                            'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                        },
                        success: function (response) {
                            if (response.success) {
                                // Fade out the row and then reload to show updated list and message
                                $('#appointment-row-' + appointmentId).fadeOut(500, function() {
                                    location.reload();
                                });
                            } else {
                                // Display error message from the server
                                alert(response.message);
                            }
                        },
                        error: function (xhr, status, error) {
                            console.error("AJAX Error:", status, error, xhr.responseText);
                            alert('An error occurred while deleting the appointment. Please try again.');
                        }
                    });
                }
            });
        });
    </script>
}

@model IEnumerable<HospitalManagementSystem.Models.Doctor>
@inject IHttpContextAccessor HttpContextAccessor

@{
    ViewData["Title"] = "Manage Doctors";
    var role = HttpContextAccessor.HttpContext?.Session.GetString("Role");
    var isAdmin = (role == "Admin");
    // Layout = isAdmin ? "~/Views/Shared/_Layout.cshtml" : "~/Views/Shared/_Layout.cshtml"; // This line is redundant, just keep one if it's always the same
}

<h2 class="mb-4 text-center">👨‍⚕️ Manage Doctors</h2>

<div id="messageContainer" class="mb-3">
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <strong>✔</strong> @Html.Raw(TempData["SuccessMessage"]) @* Use Html.Raw for generated credentials *@
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <strong>✖</strong> @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
</div>

<div class="d-flex justify-content-between align-items-center mb-4">
    <a asp-action="Create" class="btn btn-primary btn-lg">
        <i class="fas fa-user-plus me-2"></i> Add New Doctor
    </a>

    <form asp-action="Manage" method="get" class="d-flex flex-grow-1 justify-content-end align-items-center">
        <div class="input-group me-2" style="max-width: 300px;">
            <input type="text" name="searchString" class="form-control rounded-pill-start" placeholder="Search by name or contact" value="@ViewBag.CurrentSearchString" />
            <div class="input-group-append">
                <button type="submit" class="btn btn-info rounded-pill-end" title="Search"><i class="fas fa-search"></i></button>
            </div>
        </div>

        <div class="input-group me-2" style="max-width: 250px;">
            <select name="specialization" class="form-select rounded-pill-start">
                <option value="">-- All Specializations --</option>
                @if (ViewBag.Specializations != null)
                {
                    foreach (var spec in ViewBag.Specializations)
                    {
                        <option value="@spec" selected="@(spec == ViewBag.CurrentSpecialization)">@spec</option>
                    }
                }
            </select>
            <div class="input-group-append">
                <button type="submit" class="btn btn-info rounded-pill-end" title="Filter"><i class="fas fa-filter"></i></button>
            </div>
        </div>

        <a asp-action="Manage" class="btn btn-secondary rounded-pill" title="Clear Filters">
            <i class="fas fa-times-circle me-2"></i> Clear
        </a>
    </form>
</div>


<div class="card shadow-sm">
    <div class="card-body">
        @if (Model == null || !Model.Any())
        {
            <div class="alert alert-info text-center" role="alert">
                No doctors found.
            </div>
        }
        else
        {
            <div class="table-responsive">
                <table class="table table-hover table-striped">
                    <thead class="bg-light">
                        <tr>
                            <th>ID</th>
                            <th>Name</th>
                            <th>Specialization</th>
                            <th>Description</th>
                            <th>Contact Info</th>
                            <th>Location</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>@Html.DisplayFor(modelItem => item.Id)</td>
                                <td>@Html.DisplayFor(modelItem => item.Name)</td>
                                <td>@Html.DisplayFor(modelItem => item.Specialization)</td>
                                <td>@Html.DisplayFor(modelItem => item.Description)</td>
                                <td>@Html.DisplayFor(modelItem => item.Contact)</td>
                                <td>@Html.DisplayFor(modelItem => item.Location)</td>
                                <td>
                                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-warning btn-sm me-1" title="Edit Doctor"><i class="fas fa-edit"></i></a>
                                    <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-info btn-sm me-1" title="View Details"><i class="fas fa-info-circle"></i></a>

                                    <form asp-action="Delete" asp-route-id="@item.Id" method="post" class="d-inline"
                                          onsubmit="return showDeleteConfirmation(this, '@item.Name', @item.Id);">
                                        @Html.AntiForgeryToken()
                                        <button type="submit" class="btn btn-danger btn-sm" title="Delete Doctor">
                                            <i class="fas fa-trash-alt"></i>
                                        </button>
                                    </form>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteConfirmationModal" tabindex="-1" aria-labelledby="deleteConfirmationModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteConfirmationModalLabel">Confirm Delete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete doctor <span id="doctorNameToDelete" class="fw-bold"></span> (ID: <span id="doctorIdToDelete" class="fw-bold"></span>)?
                <br />
                <strong>Warning:</strong> This will also delete their associated user account, schedules, and reviews. You cannot delete a doctor with existing appointments.
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteBtn">Delete</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <!-- Font Awesome is fine here, as it's CSS -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/js/all.min.js" crossorigin="anonymous"></script>

    @* REMOVED: <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js" crossorigin="anonymous"></script> *@
    @* REMOVED: <script src="~/lib/jquery/dist/jquery.min.js"></script> *@

    <script>
        // Store the form element that triggered the modal
        let currentDeleteForm = null;

        // Function called when a delete button is clicked
        function showDeleteConfirmation(form, doctorName, doctorId) {
            currentDeleteForm = form; // Store the form element
            $('#doctorIdToDelete').text(doctorId);
            $('#doctorNameToDelete').text(doctorName);

            // Show the modal
            var deleteModal = new bootstrap.Modal(document.getElementById('deleteConfirmationModal'));
            deleteModal.show();

            // Prevent the form from submitting immediately
            return false; // Prevent the default form submission
        }

        $(document).ready(function () {
            // When the "Delete" button inside the modal is clicked
            $('#confirmDeleteBtn').on('click', function () {
                if (currentDeleteForm) {
                    currentDeleteForm.submit(); // Submit the stored form
                }
                // Hide the modal
                var deleteModal = bootstrap.Modal.getInstance(document.getElementById('deleteConfirmationModal'));
                deleteModal.hide();
            });
        });
    </script>
    <style>
        .rounded-pill-start {
            border-top-left-radius: 50rem !important;
            border-bottom-left-radius: 50rem !important;
        }

        .rounded-pill-end {
            border-top-right-radius: 50rem !important;
            border-bottom-right-radius: 50rem !important;
        }

        .rounded-pill {
            border-radius: 50rem !important;
        }
    </style>
}

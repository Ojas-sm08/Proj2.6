@model IEnumerable<HospitalManagementSystem.Models.Bill>
@inject IHttpContextAccessor HttpContextAccessor

@{
    ViewData["Title"] = "All Hospital Bills"; // Default for Admin
    Layout = "~/Views/Shared/_Layout.cshtml"; // Default for Admin

    var role = HttpContextAccessor.HttpContext?.Session.GetString("Role");
    var isDoctor = (role == "Doctor");
    var isAdmin = (role == "Admin");

    if (isDoctor)
    {
        Layout = "~/Views/Shared/_Layout.Doctor.cshtml";
        ViewData["Title"] = "My Bills"; // Specific title for doctors
    }
}

<h2 class="mb-4 text-center">🧾 @ViewData["Title"]</h2>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        @TempData["ErrorMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
@if (TempData["InfoMessage"] != null)
{
    <div class="alert alert-info alert-dismissible fade show" role="alert">
        @TempData["InfoMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<div class="card shadow-sm p-4">
    <div class="card-body">
        <p>
            @if (isAdmin)
            {
                <a asp-controller="Bill" asp-action="Create" class="btn btn-success"><i class="fas fa-plus-circle me-1"></i> Create New Bill</a>
            }
        </p>

        @if (Model != null && Model.Any())
        {
            <div class="table-responsive">
                <table class="table table-hover table-striped">
                    <thead class="table-light">
                        <tr>
                            <th>Bill ID</th>
                            <th>Bill Date</th>
                            <th>Patient Name</th>
                            <th>Doctor Name</th>
                            <th>Total Amount</th>
                            <th>Status</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr id="bill-row-@item.BillId">
                                <td>@item.BillId</td>
                                <td>@item.BillDate.ToString("yyyy-MM-dd")</td>
                                <td>@item.Patient?.Name</td>
                                <td>@item.Doctor?.Name</td>
                                <td>@item.TotalAmount.ToString("C")</td> 
                                <td>
                                    <span class="badge @(item.Status == "Paid" ? "bg-success" : item.Status == "Pending" ? "bg-warning text-dark" : "bg-secondary")">
                                        @item.Status
                                    </span>
                                </td>
                                <td>
                                    <a asp-controller="Bill" asp-action="Details" asp-route-id="@item.BillId" class="btn btn-sm btn-info" title="View Details"><i class="fas fa-eye"></i></a>

                                    @if (isAdmin || (isDoctor && item.Status != "Paid")) 
                                    {
                                    <a asp-controller="Bill" asp-action="Edit" asp-route-id="@item.BillId" class="btn btn-sm btn-warning ms-1" title="Edit Bill"><i class="fas fa-edit"></i></a>
                                    }

                                    @if (isAdmin || (isDoctor && item.Status == "Pending")) 
                                    {
                                    if (item.Status == "Pending")
                                    {
                                    <button type="button" class="btn btn-sm btn-success ms-1 mark-paid-btn" data-id="@item.BillId" title="Mark as Paid"><i class="fas fa-check-circle"></i></button>
                                    }
                                    }

                                    @if (isAdmin) 
                                    {
                                    <button type="button" class="btn btn-sm btn-danger ms-1 delete-bill-btn" data-id="@item.BillId" title="Delete Bill"><i class="fas fa-trash"></i></button>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="alert alert-info text-center" role="alert">
                No bills found.
            </div>
        }
    </div>
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/js/all.min.js" crossorigin="anonymous"></script>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>

    <script>
        $(document).ready(function () {
            // Mark as Paid button functionality
            $('.mark-paid-btn').on('click', function () {
                const billId = $(this).data('id');
                if (confirm('Are you sure you want to mark this bill as PAID? This action cannot be undone.')) {
                    $.ajax({
                        url: '@Url.Action("MarkAsPaid", "Bill")',
                        type: 'POST',
                        data: { id: billId },
                        headers: {
                            'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                        },
                        success: function (response) {
                            if (response.success) {
                                alert(response.message);
                                location.reload(); // Reload to reflect status change
                            } else {
                                alert(response.message);
                            }
                        },
                        error: function (xhr, status, error) {
                            console.error("AJAX Error:", status, error, xhr.responseText);
                            alert('An error occurred while marking the bill as paid. Please try again.');
                        }
                    });
                }
            });

            // Delete bill button functionality (Admin only)
            $('.delete-bill-btn').on('click', function () {
                const billId = $(this).data('id');
                if (confirm('Are you sure you want to PERMANENTLY delete this bill and all its items? This action cannot be undone.')) {
                    $.ajax({
                        url: '@Url.Action("Delete", "Bill")',
                        type: 'POST',
                        data: { id: billId },
                        headers: {
                            'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                        },
                        success: function (response) {
                            if (response.success) {
                                alert(response.message);
                                $('#bill-row-' + billId).fadeOut(500, function() {
                                    location.reload();
                                });
                            } else {
                                alert(response.message);
                            }
                        },
                        error: function (xhr, status, error) {
                            console.error("AJAX Error:", status, error, xhr.responseText);
                            alert('An error occurred while deleting the bill. Please try again.');
                        }
                    });
                }
            });
        });
    </script>
}
